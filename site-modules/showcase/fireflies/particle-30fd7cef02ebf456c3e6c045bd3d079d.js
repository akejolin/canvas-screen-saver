export default class s{constructor(t){this.x=Math.random()*t.ww,this.y=Math.random()*t.wh,this.dest={x:t.x,y:t.y},this.originPosition={x:t.x,y:t.y},this.vx=(Math.random()-.5)*20,this.vy=(Math.random()-.5)*20,this.accX=0,this.accY=0,this.friction=Math.random()*.05+.94,this.color=`rgba(${t.color.r}, ${t.color.g}, ${t.color.b}, ${t.color.a})`,this.radius=t.radius||Math.random()*4+2,this.radiusRef=this.radius,this.grow=0,this.delete=!1}destroy(t=null){this.delete=!0}delayedDestroy(t){setTimeout(()=>this.destroy(),t)}setNewTarget({x:t,y:i}){this.dest={x:t,y:i}}changeRadius(){this.grow>0?this.radius=this.radius+.1:this.radius=this.radius-.1}render(t){const i=t.context;this.changeRadius(),this.radius>this.radiusRef&&(this.grow=-1),this.radius<1.5&&(this.grow=1),this.accX=(this.dest.x-this.x)/1e3,this.accY=(this.dest.y-this.y)/1e3,this.vx+=this.accX,this.vy+=this.accY,this.vx*=this.friction,this.vy*=this.friction,this.x+=this.vx,this.y+=this.vy,i.fillStyle=this.color,i.beginPath(),i.arc(this.x,this.y,this.radius,Math.PI*2,!1),i.fill(),i.closePath()}}
